<% if ( $error ) { %>
<p class="alert alert-danger"><i class="glyphicon glyphicon-exclamation-sign">&nbsp;</i><%= $error %></p>
<% } %>
<form class="recurly" method="post" action="/process_transaction">
    <div id="form">
        <ul class="nav nav-tabs">
            <li id="onetime" class="active"><a href="#form-onetime" data-toggle="tab">One-time</a></li>
            <li id="monthly"><a href="#form-monthly" data-toggle="tab">Monthly</a></li>
            <li id="offline" ><a href="#form-offline" data-toggle="tab">Offline</a></li>
        </ul>

        <div class="tab-content">
            <!-- Monthly -->
            <div class="tab-pane" id="form-monthly">
                <p>Choose your <b>monthly</b> level:</p>
                <div class="btn-group" data-toggle="buttons">
                    % for my $p ( @$plans ) {
                    <label rel="popover" class="<%= $p->plan_code->text %> btn btn-primary btn-lg" data-trigger="hover" data-container="body" data-placement="top" data-content="<%= $p->description->text %>" data-original-title="<%= $p->name->text %>" title="">
                        <input type="radio" name="plan" id="<%= $p->plan_code->text %>" value="<%= $p->plan_code->text %>" data-amount="<%= $p->unit_amount_in_cents->CAD->text %>" data-plan="<%= $p->name->text %>"> $<%= $p->unit_amount_in_cents->CAD->text / 100 %>
                    </label>

                    % }
                </div>
                <div class="options-payment" style="display:none;">
                    <br style="clear:both;" /> 
                    <p>Choose your <b>payment method:</b></p>
                    <a class="btn btn-primary" role="button" data-payment="credit" href="">Credit Card</a> <a class="btn btn-primary" role="button" data-payment="paypal" href="#form-paypal">Paypal</a> <a class="btn btn-primary" role="button" data-payment="bank" href="#form-bank">Bank</a>
                </div>

                <div>
                    <br style="clear:both;" /> 
                    <p class="help-block">If you already contribute monthly to The Tyee and would like to increase your contribution, give us a shout at 604-689-7489 or <a  href="mailto:builders@thetyee.ca" target="_blank">builders@thetyee.ca</a>.</p>           

                </div>
            </div>
            <!--/Monthly-->
            <div class="tab-pane active" id="form-onetime">
                <div class="form-group">
                    <p>Select your <b>one-time</b> amount:</p>
                    <div class="btn-group" data-toggle="buttons">
                        % for my $p ( @$plans_onetime ) {
                        <label rel="popover" class="btn btn-primary btn-lg" data-trigger="hover" data-container="body" data-placement="top" data-content="<%= $p->{'text'} %>" data-original-title="$<%= $p->{'amount'} %> one-time gift" title="$<%= $p->{'amount'} %> one-time gift">
                            <input type="radio" name="amount" id="<%= $p->{'amount'} %>" value="<%= $p->{'amount'} %>"> $<%= $p->{'amount'} %>
                        </label>

                        % }
                    </div>
                    <div id="other-amount-label"><label for="other-amount">Or, enter your own amount:</label></div>
                    <div class="input-group">
                        <span class="input-group-addon">$</span>
                        <input type="text" class="form-control" id="other-amount" name="amount" placeholder="Enter a round number, e.g., 25">
                        <span class="input-group-addon">.00</span>
                    </div>
                    <p class="help-block">Or, consider becoming a <a href="/" id="link-tab-monthly">sustaining monthly supporter</a> for less than the cost of a newspaper subscription.</p>


                    <div class="options-payment" style="display:none;">
                        <br style="clear:both;" /> 
                        <p>Choose your <b>payment method:</b></p>
                        <a class="btn btn-primary" role="button" data-payment="credit" href="">Credit Card</a> <a class="btn btn-primary" role="button" data-payment="paypal" href="">Paypal</a> 
                    </div>


                </div>
            </div>
            <div class="tab-pane" id="form-offline">
                <p>Don't trust the Internet? Can't stand credit cards? Does your organization (or you?) want to make a large contribution or one that matches reader contributions?</p> 
                <p><strong>How to support The Tyee without ever touching your keyboard.</strong></p>
                <div style="margin-left:20px;">
                    <p><b>Option 1: Register with your credit card by phone:</b></p>
                    <p>Call 604-689-7489 in Vancouver or toll-free at 1-844-301-6677, Monday - Friday, 10 am - 5 pm PST.</p>
                    <p><strong>Option 2: Send us a cheque: </strong></p>
                    <p>Cheques can be made out to Countercurrent Media Ltd. and mailed to:</p>
                    <p>
                        The Tyee<br />
                        PO Box 28187 <br />
                        West Pender St<br />
                        Vancouver, BC V6C 3T7
                        <br />
                    </p>
                    <p>Please include with your cheque your full name, return address, phone number and email, plus indicate whether you would like your contribution to remain anonymous. If 
                        you'd like to contribute monthly from your bank account, print off <a href="http://static.thetyee.ca/support/v1.5.3/ui/img/TyeeBuildersBankWithdrawalForm.pdf">this form</a> and follow 
                        the instructions.</p>
                </div>
                <p><strong>How to set-up larger and matching contributions:</strong></p>
                <div style="margin-left:20px;">
                    <p>Would your organization or business be interested in making a larger contribution? You can do so by cheque as outlined above, or if you're interested in offering a matching contribution, give us a shout. Matching contributions can really help ramp up a campaign, and your organization gets great exposure as a supporter of independent journalism in the process.  If this is you, contact us by <a href="mailto:builders@thetyee.ca">email</a> or phone (604-689-7409).<p>
                        </div>
                    </div>
                </div>
            </div>

            <div id="errors" style="display:none;">
                <p class="alert alert-danger"><i class="glyphicon glyphicon-exclamation-sign">&nbsp;</i><span class="message"></span></p>
            </div>

            <div class="payment-fields">
                <div class="fields fields-paypal" style="display:none;">
                    %= include 'includes/form-fields-paypal'
                </div>
                <div class="fields fields-personal" style="display:none;">
                    %= include 'includes/form-fields-personal'
                </div>
                <div class="fields fields-credit" style="display:none;">
                    %= include 'includes/form-fields-credit'
                </div>
                <div class="fields fields-bank" style="display:none;">
                    %= include 'includes/form-fields-bank'
                </div>
                <div class="fields fields-address" style="display:none;">
                    %= include 'includes/form-fields-address'
                </div>
                <div class="fields fields-submit" style="display:none;">
                    <input type="hidden" id="recurly-token" data-recurly="token" name="recurly-token" value="">
                    <input type="hidden" id="payment-type" name="payment-type" value="">
                    <input type="hidden" id="plan-name" name="plan-name" value="">
                    <input type="hidden" id="amount-in-cents" name="amount-in-cents" value="">

                    <div class="alert alert-info" id="confirm-payment"><strong>You are about to make a payment for <span></span></strong></div>
                    <button type="submit" id="subscribe" class="btn btn-success btn-lg">Process payment &raquo;</button>
                    <p><i class="glyphicon glyphicon-lock">&nbsp;</i><strong>Your transaction is secure.</strong> The Tyee uses industry-standard SSL encryption to secure your connection. Your transaction is then processed securely by our payment processors, Recurly and Beanstream.</p>
                    <p>Because we publish hard-hitting political journalism, we can't be a charity and therefore can't offer charitble tax receipts. Learn <a href="http://thetyee.ca/About/Us/#faq-funding">more</a></p>
                    <hr class="soften" />
                </div>
            </div>
</form>

% content_for javascript => begin
%= javascript begin

// jQuery function for scrolling to elements
$.fn.scrollView = function () {
    return this.each(function () {
        $('html, body').animate({
            scrollTop: $(this).offset().top
        }, 1000);
    });
}

// Eanble the description popovers
$('[rel="popover"]').popover();

// Switch to monthly tab from one-time
$('a#link-tab-monthly').on('click', function( event ) {
    event.preventDefault();
    $('#monthly a:last').tab('show');
});
// Switch to one-time tab from monthly
$('a#link-tab-onetime').on('click', function( event ) {
    event.preventDefault();
    $('#onetime a:last').tab('show');
});

$('ul.nav-tabs').on('click', function( event ) {
    $('.options-payment').hide();
    $('.fields').hide();
    $('#errors span.message').text('');
    $('#errors').hide();
});

// Kludge to udpate a confirmation panel
var paymentString = '';
function updateConfirmPayment() {
    var amount = $('input#amount-in-cents').val();
    amount = amount / 100; // To dollars
    amount = '$' + amount  // $ sign
    var plan   = $('input#plan-name').val();
    if ( plan ) {
        paymentString = amount + ' / month';
        } else {
        paymentString = amount + ' one time';
    }
    $('#confirm-payment span').text(paymentString);
}

// Show the payment type option buttons
function showMonthlyPaymentOptions () {
    $('.options-payment').show();
    $('#errors span.message').text('');
    $('#errors').hide();
    updateConfirmPayment();
}


// Capture the amount, set input values, show the payment types
$( "#form-monthly label.btn" ).on( "click touchstart", function( event ) {
    var selectedinput = $('input', this)[0];
    var amountInCents = selectedinput.dataset.amount;
    var planName = selectedinput.dataset.plan;
    $('input#amount-in-cents').val(amountInCents);
    $('input#plan-name').val(planName);
    showMonthlyPaymentOptions();
});
// Capture the amount, set input values, show the payment types
$( "#form-onetime label.btn" ).on( "click touchstart", function( event ) {
    var selectedinput = $('input', this)[0];
    var amountInCents = $(selectedinput).val() * 100;
    $('input#amount-in-cents').val(amountInCents);
    $('input#plan-name').val('');
    showMonthlyPaymentOptions();
});

$('input#other-amount').on( "blur", function( event ) {
    var selectedinput = $(event.currentTarget);
    var amount = selectedinput.val();
    if (amount >= 1) {
        var amountInCents = amount * 100;
        $('input#amount-in-cents').val(amountInCents);
        showMonthlyPaymentOptions();
    }
});

function showPaymentFields(type) {
    $('.fields').hide();
    $('.fields-' + type).show();
    $('.fields-personal').show();
    $('.fields-address').show();
    $('.fields-submit').show();
    if (type === 'bank') { // make these fields required too
            $('.fields-bank input').prop('required',true);
        } else {
            $('.fields-bank input').prop('required',false);
    }
    updateConfirmPayment();
};

// Switch from drop down to input on other countries
$('#country').on('change', function(event) { 
    var el = event.currentTarget;
    var country = el.value;
    if ( country !== 'CA' ) {
        $('#state').hide();
        $('#state-alt').show();
    }
});

function setupPaymentForm(paymentType) {
    if ( paymentType !== 'bank' ) { // It's something Recurly can work with
        // Hook Recurly.js up to the form
        recurly.configure({
            publicKey: '<%= $config->{'pkey'} %>',
            style: {
                all: {
                },
                number: {
                    placeholder: '4111 1111 1111 1111'
                },
                month: {
                    placeholder: 'Month (mm)'
                },
                year: {
                    placeholder: 'Year (yy)'
                },
                cvv: {
                    fontSize: '12px',
                    placeholder: {
                        content: 'Security Code'
                    }
                }
            }
        });
        // When a customer hits their 'enter' key while in a field
        recurly.on('field:submit', function (event) {
            $('form').submit();
        });

        // On form submit, we stop submission to go get the token
        // and figure out what type of payment needs to be processed
        $('form').on('submit', function (event) {
            // Prevent the form from submitting while we retrieve the token from Recurly
            event.preventDefault();

            // Reset the errors display
            $('#errors span.message').text('');
            $('label.control-label').removeClass('has-error');
            $('input').removeClass('has-error');

            // Disable the submit button
            $('button').prop('disabled', true);

            var form = this;
            if ( paymentType === 'credit' ) {
                // Now we call recurly.token with the form. It goes to Recurly servers
                // to tokenize the credit card information, then injects the token into the
                // data-recurly="token" field above
                recurly.token(form, function (err, token) {

                    // send any errors to the error function below
                    if (err) error(err);

                    // Otherwise we continue with the form submission
                    else form.submit();
                });
            } else if ( paymentType === 'paypal' ) {
                // Now we call recurly.paypal with an object containing a 'description' property. 
                // This will open a new window, beginning the PayPal billing agreement flow. 
                // to tokenize the credit card information, then injects the token into the
                // data-recurly="token" field above
                recurly.paypal({ description: paymentString }, function (err, token) {
                    if (err) {
                        // Let's handle any errors using the function below
                        errorPaypal(err);
                    } else {
                        // set the hidden field above to the token we get back from Recurly
                        $('#recurly-token').val(token.id);
                        // Now we submit the form!
                        form.submit();
                    }
                });
            };
        });
    } // End if
}; // End setupPaymentForm()

// Capture the payment type
$('.options-payment a').on( "click touchstart", function( event ) {
    event.preventDefault();
    $('#errors span.message').text('');
    $('#errors').hide();
    var el = event.currentTarget;
    var paymentType = el.dataset.payment;
    $('#payment-type').val(paymentType);
    showPaymentFields(paymentType);
    setupPaymentForm(paymentType);
});


// A simple Recurly credit card error handling function to expose errors to the customer
function error (err) {
    console.log(err);
    $('#errors span.message').text('The following fields appear to be invalid: ' + err.fields.join(', '));
    $("#errors").show();
    $('button').prop('disabled', false);
    $.each(err.fields, function (i, field) {
        $('[data-recurly=' + field + ']').addClass('has-error');
        $('[data-recurly=' + field + ']').parent().addClass('has-error');
        $('[data-label=' + field + ']').addClass('has-error');
    });
    $('#errors').scrollView();
}
// A simple Paypal error handling function to expose errors to the customer
function errorPaypal (err) {
    console && console.error(err);
    $("#errors").show();
    $('#errors span.message').text('There was a problem intializing the PayPal transaction. Please try again in a few moments.');
    $('#errors').scrollView();
    $('button').prop('disabled', false);
}

%   end
% end
