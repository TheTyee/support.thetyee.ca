<% if ( $error ) { %>
<p class="alert alert-danger"><i class="glyphicon glyphicon-exclamation-sign">&nbsp;</i><%= $error %></p>
<% } %>
    <div id="form">
        <ul class="nav nav-tabs">
            <li id="onetime" class="" ><a href="#form-onetime" data-toggle="tab">One-time</a></li>
            <li id="monthly" class="active"><a href="#form-monthly" data-toggle="tab">Monthly</a></li>
            <li id="offline" ><a href="#form-offline" data-toggle="tab">Offline</a></li>
        </ul>

        <div class="tab-content">
            <!-- Monthly -->
            <div class="tab-pane active" id="form-monthly">
       

<div class="chooseown" ">
                <p><b>Monthly</b> level:</p>
                <div class="btn-group" data-toggle="buttons">
                    % for my $p ( @$plans ) {
                    <label rel="popover" class="<%= $p->plan_code->text %> btn btn-primary btn-lg <%= $p->plan_code->text eq "builder-15" ? "active" : "" %> " data-trigger="hover" data-container="body" data-placement="top" data-content="<%= $p->description->text %>" data-original-title="<%= $p->name->text %>" title="">
                        <input type="radio" name="plan" id="<%= $p->plan_code->text %>" value="<%= $p->plan_code->text %>" data-amount="<%= $p->unit_amount_in_cents->CAD->text %>" data-code="<%= $p->plan_code->text %>" data-plan="<%= $p->name->text %>"> $<%= $p->unit_amount_in_cents->CAD->text / 100 %>
                    </label>

                    % }
                    

                </div>
                
                <div id="other-amount-label"><label for="other-amount">Or, enter your own amount:</label></div>
                
                <div class="input-group">
                        <span class="input-group-addon">$</span>
                        <input type="text" class="form-control" id="other-amount" name="amount" placeholder="Enter a round number, e.g., 25">
                        <span class="input-group-addon">.00</span>
                    </div>
                
                            <br>                
                 </div>  
                <label rel="popover" class="btn btn-primary btn-lg next">Choose payment options</label>
                
                            <br>
                
                
                
                <div class="options-payment" id="monthlypayment"  style="display:none;">
                    <br style="clear:both;" /> 
                    <p>Choose your <b>payment method:</b></p>
                    <a class="btn btn-primary" role="button" data-payment="credit" href="">Credit Card</a> <a class="btn btn-primary" role="button" data-payment="paypal" href="">Paypal</a> <a class="btn btn-primary" role="button" data-payment="bank" href="">Bank</a>
                </div>

             
                    <br style="clear:both;" /> 
                    <p class="help-block">If you already contribute monthly to The Tyee and would like to increase your contribution, give us a shout at 604-689-7489 or <a  href="mailto:builders@thetyee.ca" target="_blank">builders@thetyee.ca</a>.</p>           

                </div>
     
            <!--/Monthly-->
            <div class="tab-pane" id="form-onetime">
                <div class="form-group">
                    <p>Select your <b>one-time</b> amount:</p>
                    <div class="btn-group" data-toggle="buttons">
                        % for my $p ( @$plans_onetime ) {
                        <label rel="popover" class="btn btn-primary btn-lg" data-trigger="hover" data-container="body" data-placement="top" data-content="<%= $p->{'text'} %>" data-original-title="$<%= $p->{'amount'} %> one-time gift" title="$<%= $p->{'amount'} %> one-time gift">
                            <input type="radio" name="amount" id="<%= $p->{'amount'} %>" value="<%= $p->{'amount'} %>"> $<%= $p->{'amount'} %>
                        </label>

                        % }
                    </div>
                    <div id="other-amount-label"><label for="other-amount">Or, enter your own amount:</label></div>
                    <div class="input-group">
                        <span class="input-group-addon">$</span>
                        <input type="text" class="form-control" id="other-amount" name="amount" placeholder="Enter a round number, e.g., 25">
                        <span class="input-group-addon">.00</span>
                    </div>
                    <p class="help-block">Or, consider becoming a <a href="/" id="link-tab-monthly">sustaining monthly supporter</a> for less than the cost of a newspaper subscription.</p>


                    <div class="options-payment" style="display:none;">
                        <br style="clear:both;" /> 
                        <p>Choose your <b>payment method:</b></p>
                        <a class="btn btn-primary" role="button" data-payment="credit" href="">Credit Card</a> <a class="btn btn-primary" role="button" data-payment="paypal" href="">Paypal</a> 
                    </div>


                </div>
            </div>
            <div class="tab-pane" id="form-offline">
                <p>Don't trust the Internet? Can't stand credit cards? Does your organization (or you?) want to make a large contribution or one that matches reader contributions?</p> 
                <p><strong>How to support The Tyee without ever touching your keyboard.</strong></p>
                <div style="margin-left:20px;">
                    <p><b>Option 1: Register with your credit card by phone:</b></p>
                    <p>Call 604-689-7489 in Vancouver or toll-free at 1-844-301-6677, Monday - Friday, 10 am - 5 pm PST.</p>
                    <p><strong>Option 2: Send us a cheque: </strong></p>
                    <p>Cheques can be made out to The Tyee and mailed to:</p>
                    <p>
                        The Tyee<br />
                        PO Box 28187 <br />
                        West Pender St<br />
                        Vancouver, BC V6C 3T7
                        <br />
                    </p>
                    <p>Please include with your cheque your full name, return address, phone number and email, plus indicate whether you would like your contribution to remain anonymous. If 
                        you'd like to contribute monthly from your bank account, print off <a href="http://static.thetyee.ca/support/v1.5.3/ui/img/TyeeBuildersBankWithdrawalForm.pdf">this form</a> and follow 
                        the instructions.</p>
                </div>
                <p><strong>How to set-up larger and matching contributions:</strong></p>
                <div style="margin-left:20px;">
                    <p>Would your organization or business be interested in making a larger contribution? You can do so by cheque as outlined above, or if you're interested in offering a matching contribution, give us a shout. Matching contributions can really help ramp up a campaign, and your organization gets great exposure as a supporter of independent journalism in the process.  If this is you, contact us by <a href="mailto:builders@thetyee.ca">email</a> or phone (604-689-7409).<p>
                        </div>
                    </div>
                </div>
            </div>

            <div id="errors" style="display:none;">
                <p class="alert alert-danger"><i class="glyphicon glyphicon-exclamation-sign">&nbsp;</i><span class="message"></span></p>
            </div>

            <div class="payment-fields">
                <div id="form-credit" class="form" style="display:none;">
                    %= include 'includes/form-full-credit'
                </div>
                <div id="form-paypal" class="form" style="display:none;">
                    %= include 'includes/form-full-paypal'
                </div>
                <div id="form-bank" class="form" style="display:none;">
                    %= include 'includes/form-full-bank'
                </div>
            </div>

% content_for javascript => begin
%= javascript begin


// jQuery function for scrolling to elements
$.fn.scrollView = function () {
    return this.each(function () {
        $('html, body').animate({
            scrollTop: $(this).offset().top
        }, 1000);
    });
}

// Eanble the description popovers
$('[rel="popover"]').popover();

// Switch to monthly tab from one-time
$('a#link-tab-monthly').on('click', function( event ) {
    event.preventDefault();
    $('#monthly a:last').tab('show');
});

// Switch to one-time tab from monthly
$('a#link-tab-onetime').on('click', function( event ) {
    event.preventDefault();
    $('#onetime a:last').tab('show');
});

// User switched tabs, hide forms & errors
$('ul.nav-tabs').on('click', function( event ) {
    $('.options-payment').hide();
    $('.payment-fields div.form').hide();
    $('#errors span.message').text('');
    $('#errors').hide();
});

// Kludge to udpate a payment confirmation panel
var paymentString = '';
function updateConfirmPayment(type) {
    var amount = $('input.amount-in-cents').val();
    amount = amount / 100; // To dollars
    amount = '$' + amount  // $ sign
    var plan   = $('#form-full-' + type + ' input.plan-name').val();
    if ( plan ) {
        paymentString = amount + ' / month';
        } else {
        paymentString = amount + ' one time';
    }
    $('.confirm-payment span').text(paymentString);
}

// Show the payment type option buttons
function showMonthlyPaymentOptions () {
    $('.options-payment').show();
    $('.next').hide();
    $('#errors span.message').text('');
    $('#errors').hide();
            $('html,body').animate({scrollTop:$("#monthlypayment").offset().top}, 500);

//    updateConfirmPayment();
// disable for now because can't be known until payment type chosen -- called later
}


// Capture the amount, set input values, show the payment types
$( "#form-monthly  label.btn.chooseown" ).on( "click touchstart", function( event ) {
   $("div.chooseown").show();
});


// hide choose your own if you choose the default
$( "#form-monthly label.btn.default" ).on( "click touchstart", function( event ) {
$("div.chooseown").hide();
});

// Capture the amount, set input values, show the payment types
$( "#form-monthly .chooseown label.btn, #form-monthly label.btn.default" ).on( "click touchstart", function( event ) {

    var selectedinput = $('input', this)[0];
    var amountInCents = selectedinput.dataset.amount;
    var planName = selectedinput.dataset.plan;
    var planCode = selectedinput.dataset.code;
    $('input.amount-in-cents').each(function(){
        $(this).val(amountInCents);
    })
    
    
    $('input.plan-name').each(function(){
       $(this).val(planName); 

    });
    $('input.plan-code').each(function(){
    $(this).val(planCode);
    });
    
});




$(".btn.next").click(function(){


var selectedinput = $('input#other-amount');
    var amount = selectedinput.val();
    
   
    
                if (amount >= 1) {
                    var amountInCents = amount * 100;
                    $('input.amount-in-cents').val(amountInCents);
                    showMonthlyPaymentOptions();
               
    
    } else {
                $("label.btn").each(function( index ) {
                
                
                        if ($(this).hasClass("active")) {
                            showMonthlyPaymentOptions();
                        }
                
               });
   }
});

// Capture the amount, set input values, show the payment types
$( "#form-onetime label.btn" ).on( "click touchstart", function( event ) {
    var selectedinput = $('input', this)[0];
    var amountInCents = $(selectedinput).val() * 100;
    $('input.amount-in-cents').val(amountInCents);
    $('input.plan-name').val('');
    $('input.plan-code').val('');
    showMonthlyPaymentOptions();
});

var previousbutton;

$('input#other-amount').focus(function(event) {
previousbutton = $(".btn.active");
   $(previousbutton).removeClass("active");
});

// User enters their own amount for a one-time payment
$('input#other-amount').on( "blur", function( event ) {
   
    var selectedinput = $(event.currentTarget);
    var amount = selectedinput.val();
    if (amount >= 1) {
        var amountInCents = amount * 100;
        $('input.amount-in-cents').val(amountInCents);
       // showMonthlyPaymentOptions();
    } else {
    $(previousbutton).addClass("active");
    $(".btn.active input").select();
    
    }

});

// for monthly payment instance of "other" only, populate hidden fields for plan name $amt
$('#form-monthly input#other-amount').on( "blur", function( event ) {
    var selectedinput = $(event.currentTarget);
        var amount = selectedinput.val();
    if (amount >= 1) {
        var amountInCents = amount * 100;
        $('input.amount-in-cents').val(amountInCents);
       
        
    var planName = "custom_amount";
    var planCode = "custom_amount";
    $('input.amount-in-cents').each(function(){
        $(this).val(amountInCents);
    })
    
      $('input.unit-amount-in-cents').val(amountInCents);
    $('input.unit-amount-in-cents').each(function(){
        $(this).val(amountInCents);
    })
    
    $('input.plan-name').each(function(){
       $(this).val(planName); 

    });
    $('input.plan-code').each(function(){
    $(this).val(planCode);
    });
    }

});



// Show the correct fields depending on the payment type
function showPaymentForm(type) {
    $('.payment-fields div.form').hide();
    var el = $('#form-' + type);
    el.show();
    if (type === 'bank') { // make these fields required too
            $('.fields-bank input').prop('required',true);
        } else {
            $('.fields-bank input').prop('required',false);
    }
    updateConfirmPayment(type);
};

// Switch from drop down to input on other countries
$('#country').on('change', function(event) { 
    var el = event.currentTarget;
    var country = el.value;
    if ( country !== 'CA' ) {
            $('#state').hide();
            $('#state').attr('name', '');
            $('#state').attr('data-recurly', '');
            $('#state-alt').show();
            $('#state-alt').attr('name', 'state');
            $('#state-alt').attr('data-recurly', 'state');

        } else if ( country === 'CA' ) {
            $('#state-alt').hide();
            $('#state-alt').attr('name', '');
            $('#state-alt').attr('data-recurly', '');
            $('#state').show();
            $('#state').attr('name', 'state');
            $('#state').attr('data-recurly', 'state');
    };
});



// Capture the payment type
$('.options-payment a').on( "click touchstart", function( event ) {
    event.preventDefault();
     updateConfirmPayment();
    $('#errors span.message').text('');
    $('#errors').hide();
    var el = event.currentTarget;
    var paymentType = el.dataset.payment;
    $('.payment-type').val(paymentType);
    showPaymentForm(paymentType);
    });


// A simple Recurly credit card error handling function to expose errors to the customer
function error (err) {
    console.log(err);
    $('#errors span.message').text('The following fields appear to be invalid: ' + err.fields.join(', '));
    $("#errors").show();
    $('button').prop('disabled', false);
    $.each(err.fields, function (i, field) {
        $('[data-recurly=' + field + ']').addClass('has-error');
        $('[data-recurly=' + field + ']').parent().addClass('has-error');
        $('[data-label=' + field + ']').addClass('has-error');
    });
    $('#errors').scrollView();
}
// A simple Paypal error handling function to expose errors to the customer
function errorPaypal (err) {
    console && console.error(err);
    $("#errors").show();
    $('#errors span.message').text('There was a problem intializing the PayPal transaction. Please try again in a few moments.');
    $('#errors').scrollView();
    $('button').prop('disabled', false);
}

recurly.configure({
    publicKey: '<%= $config->{'pkey'} %>',
    style: {
        all: {
        },
        number: {
            placeholder: '4111 1111 1111 1111'
        },
        month: {
            placeholder: 'Month (mm)'
        },
        year: {
            placeholder: 'Year (yy)'
        },
        cvv: {
            fontSize: '12px',
            placeholder: {
                content: 'Security Code'
            }
        }
    }
});

// When a customer hits their 'enter' key while in a field
//recurly.on('form.recurly field:submit', function (event) {
 //   $('form.recurly').submit();
//});

// On form submit, we stop submission to go get the token
// and figure out what type of payment needs to be processed
$('#form-credit form').on('submit', function (event) {
    // Prevent the form from submitting while we retrieve the token from Recurly
    event.preventDefault();

    // Reset the errors display
    $('#errors span.message').text('');
    $('label.control-label').removeClass('has-error');
    $('input').removeClass('has-error');

    // Disable the submit button
    $('button').prop('disabled', true);

    var form = this;
    
    $(this).input
    // Now we call recurly.token with the form. It goes to Recurly servers
    // to tokenize the credit card information, then injects the token into the
    // data-recurly="token" field above
    recurly.token(form, function (err, token) {

        // send any errors to the error function below
        if (err) error(err);

        // Otherwise we continue with the form submission
        else form.submit();
    });
});

$('#form-paypal form').on('submit', function (event) {
    event.preventDefault();
    // Reset the errors display
    $('#errors span.message').text('');
    $('label.control-label').removeClass('has-error');
    $('input').removeClass('has-error');
    var paypalDescription = 'A ' + paymentString + ' contribution to The Tyee.'
    // Disable the submit button
    $('button').prop('disabled', true);
    var form = this;
    var opts = { description: paypalDescription };
      recurly.paypal(opts, function (err, token) {
        if (err) {
            // let's handle any errors using the function below
            errorPaypal(err);
        } else {
            // set the hidden field above to the token we get back from Recurly
            $('.recurly-token').val(token.id);
            // Now we submit the form!
            form.submit();
        }
      });
});


%   end
% end
